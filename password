

++++++
func checkPasswordStrength(_ password:[String] ) -> Int {
	//Insert your code here
	let passwordStr = password.joined()

    guard passwordStr.count >= 8 else {
        return -1 
    }

    var hasUC = false
    var hasLC = false
    var hasNum = false

    for char in passwordStr {
        if char.isUppercase {
            hasUC = true
        } else if char.isLowercase {
            hasLC = true
        } else if char.isNumber {
            hasNum = true
        }
    }

    if hasUC && hasUC && hasNum && !hasConsecutiveChars(passwordStr) {
        return 1
    } else {
        return 0 
    }
}

// Helper function to check for three consecutive characters
func hasConsecutiveChars(_ inputString: String) -> Bool {
    for i in 0..<(inputString.count - 2) {
        let start = inputString.index(inputString.startIndex, offsetBy: i)
        let end = inputString.index(inputString.startIndex, offsetBy: i + 2)
        let substring = inputString[start...end]

        if Set(substring).count == 1 {
            return true // Three consecutive characters found
        }
    }
    return false // No three consecutive characters found
}





+++++++++++++++ Alternate solution
guard password.count >= 8 else { return -1 }

        var uppercased = false
        var lowercased = false
        var number = false
        var prevChar: Character = "_"
        for (i, char) in password.enumerated() {
            if char.isUppercase { uppercased = true }
            if char.isLowercase { lowercased = true }
            if char.isNumber { number = true }
            
        if password[i] == password[i+1] && password[i] == password[i+2] {
            return 0 // Three consecutive characters found
        }
        }
if uppercased && lowercased && number {
	return 1
}
return 0
++++++++++++
